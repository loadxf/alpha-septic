services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
        - NEXT_PUBLIC_GTM_ID=${NEXT_PUBLIC_GTM_ID}
        - RESEND_API_KEY=${RESEND_API_KEY}
        - NGINX_HOST=${NGINX_HOST}
    command: sh -c "./scripts/create-dirs.sh && node server.js"
    image: alpha-septic:latest
    container_name: alpha-septic
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=production
      - RESEND_API_KEY=${RESEND_API_KEY}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - NEXT_PUBLIC_ADMIN_EMAIL=${NEXT_PUBLIC_ADMIN_EMAIL}
      - NEXT_PUBLIC_ADMIN_PASSWORD=${NEXT_PUBLIC_ADMIN_PASSWORD}
      - TOKEN_SECRET=${TOKEN_SECRET}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - CONTACT_EMAIL=${CONTACT_EMAIL}
      - BOOKING_EMAIL=${BOOKING_EMAIL}
      - NEXT_PUBLIC_GTM_ID=${NEXT_PUBLIC_GTM_ID}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER:-$EMAIL_USER}
      - SMTP_PASS=${SMTP_PASS:-$EMAIL_PASSWORD}
      - NGINX_HOST=${NGINX_HOST}
    # Load environment variables from .env file
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    # Volumes for persistent data (if needed)
    volumes:
      - ./public/uploads:/app/public/uploads
    # Log configuration for production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - web-network

  # Production NGINX proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: alpha-septic-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - web
    networks:
      - web-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  web-network:
    driver: bridge

# Named volumes for data persistence
volumes:
  uploads-volume: 